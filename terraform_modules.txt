

####No experience using terraform therefore writing general modules for creating iam roles, user, policy in terraform


###########Creating IAM account #############
module "iam_account" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-account"
  version = "~> 4"

  account_alias = "prod-ci-iam"

  minimum_password_length = 37
  require_numbers         = false

}

############Create IAM User###########
module "iam_user" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-user"
  version = "~> 4"

  name          = "ci-prod-user"
  force_destroy = true

  pgp_key = "keybase:test"

  password_reset_required = false
}

###########Creating IAM role#################
module "iam_assumable_role" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-assumable-role"
  version = "~> 4"

  trusted_role_arns = [
    "arn:aws:iam::307990089504:root",
    "arn:aws:iam::835367859851:prod-ci-user",
  ]

  create_role = true

  role_name         = "prod-ci-role"
  role_requires_mfa = true

  custom_role_policy_arns = [
    "arn:aws:iam::aws:policy/AmazonCognitoReadOnly",
    "arn:aws:iam::aws:policy/AlexaForBusinessFullAccess",
  ]
  number_of_custom_role_policy_arns = 2
}
################Creating IAM Group################
module "iam_group_with_assumable_roles_policy" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-group-with-assumable-roles-policy"
  version = "~> 4"

  name = "prod-ci-group"

  assumable_roles = [
    "arn:aws:iam::835367859855:role/readonly"  # these roles can be created using `iam_assumable_roles` submodule
  ]

  group_users = [
    "prod-ci-user",
  ]
}
##################Creating IAM Policy#################
module "iam_read_only_policy" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-read-only-policy"
  version = "~> 4"

  name        = "prod-ci-policy"
  path        = "/"
  description = "My example read-only policy"

  allowed_services = ["rds", "dynamo", "health"]
#################Attaching policy to a user/group##########

resource "aws_iam_user_policy_attachment" "attachment" {
  user       = aws_iam_user.prod-ci.name
  policy_arn = aws_iam_policy.prod-ci.arn
}}
